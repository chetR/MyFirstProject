author: "Chetan Ramlall"
date: "20/05/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
```
## R Markdown
## Step 1
```{r datainput, echo=TRUE, results='hide'}
d1 <-  read_csv("EQS_20160131.csv")
d2 <-  read_csv("EQS_20160229.csv")
d3 <-  read_csv("EQS_20160331.csv")
full_data <- na.omit(bind_rows(d1,d2,d3))   #Drops all rows with NA
```
## Step 2
```{r filter, echo = TRUE, results='hide'}
# Group and filter the data
FilteredData <-
full_data %>%
group_by(date) %>%
top_n(20, MarketCapUSD) %>%
ungroup()
```
## Step 3 - Ranking by MarketCapUSD
```{r ranking, echo = TRUE}
#Form table using kable
TableData <-
FilteredData %>%
filter(date=='2016-01-31') %>%
select(date,Ticker,MarketCapUSD)
OrderedTableData <- TableData[order(TableData$MarketCapUSD,decreasing = TRUE),]
# Another way to do it using filter
# full_data %>% group_by(date) %>% mutate(Rank = rank(MarketCapUSD)) %>% filter(Rank < 20) %>% select(-Rank)
kable(OrderedTableData)
```
## Step 4 - Z-Score for BookYield
```{r , echo = TRUE}
#Form table using kable
YieldData <-
full_data %>%
filter(date=='2016-01-31') %>%
select(date,Ticker,BookYield) %>%
mutate(Z_BookYield=(BookYield - mean(BookYield))/sd(BookYield))
kable(YieldData)
```
## Step 5 - All months Z-Scores
```{r , echo = TRUE}
AllYieldData <-
full_data %>%
group_by(date) %>%
select(date,Ticker,BookYield) %>%
mutate(Z_BookYield=(BookYield - mean(BookYield))/sd(BookYield)) %>%
ungroup()
```
## Step 6 - All months Z-Scores Top 10
```{r , echo = TRUE}
Top10Yields <-
AllYieldData %>%
group_by(date) %>%
mutate(Rank = rank(-Z_BookYield,ties.method = "first")) %>% #rank orders ascendingly by default.
filter(Rank <= 10) %>%                                      #Nice trick to negate argument to order desc.
select(-Rank) %>%
ungroup()
```
## Step 7 - Calculate Market Cap-Weight
```{r , echo = TRUE}
MktCapWeights <-
full_data %>%
group_by(date) %>%
mutate(Z_BookYield=(BookYield - mean(BookYield))/sd(BookYield)) %>%
mutate(Rank = rank(-Z_BookYield,ties.method = "first")) %>%   #rank orders ascendingly by default.
filter(Rank <= 10) %>%                                        #Nice trick to negate argument to order desc.
select(-Rank) %>%
mutate(`MC Weight` = (MarketCapUSD/sum(MarketCapUSD))*100)
```
## Step 8 - Calculate Cap Weighted Earnings yield
```{r , echo = TRUE}
SummaryTable <-
MktCapWeights %>%
summarise(`Total Weight` = sum(`MC Weight`),`Portfolio EarningsYield`=sum(`MC Weight`*EarningsYield))
kable(SummaryTable)
```
## Including Plots
View(SummaryTable)
---
title: "MyFirst Project"
author: "Chetan Ramlall"
date: "20/05/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
```
```{r datainput, include=FALSE}
# *******************************
# Step 1 - Reads data files into a single dataframe.
# *******************************
d1 <-  read_csv("EQS_20160131.csv")
d2 <-  read_csv("EQS_20160229.csv")
d3 <-  read_csv("EQS_20160331.csv")
full_data <- na.omit(bind_rows(d1,d2,d3))   #Drops all rows with NA
```
```{r filter, include=FALSE}
# *******************************
# Step 2 - Groups and filters date
# *******************************
FilteredData <-
full_data %>%
group_by(date) %>%
top_n(20, MarketCapUSD) %>%
ungroup()
```
## Ranking by USD Market Cap
```{r ranking, echo = FALSE, message=FALSE}
# *******************************
# Step 3 - Ranking by MarketCapUSD and using kable.
# *******************************
TableData <- FilteredData %>%
filter(date == '2016-01-31') %>%
select(date,Ticker,MarketCapUSD)
OrderedTableData <- TableData[order(TableData$MarketCapUSD,decreasing = TRUE),]
# Another way to do it using filter
# full_data %>% group_by(date) %>% mutate(Rank = rank(MarketCapUSD)) %>% filter(Rank < 20) %>% select(-Rank)
kable(OrderedTableData)
```
## Bookyield for First Month (Jan 2016)
```{r bookyield, echo = FALSE, message=FALSE}
# *******************************
# Step 4 - Z-Score for BookYield
# *******************************
YieldData <- full_data %>%
filter(date == '2016-01-31') %>%
select(date,Ticker,BookYield) %>%
mutate(Z_BookYield = (BookYield - mean(BookYield))/sd(BookYield))
kable(YieldData)
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 5 - Z-Scores for all months
# *******************************
AllYieldData <- full_data %>%
group_by(date) %>%
select(date,Ticker,BookYield) %>%
mutate(Z_BookYield = (BookYield - mean(BookYield))/sd(BookYield)) %>%
ungroup()
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 6 - Top 10 stocks with highest bookyield for all months.
# *******************************
Top10Yields <- AllYieldData %>%
group_by(date) %>%
mutate(Rank = rank(-Z_BookYield,ties.method = "first")) %>% #rank orders ascendingly by default.
filter(Rank <= 10) %>%                                      #Nice trick to negate argument to order desc.
select(-Rank) %>%
ungroup()
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 7 - Calculate Market Cap Weighted weight for the Top 10 stocks, per month.
# *******************************
MktCapWeights <- full_data %>%
group_by(date) %>%
mutate(Z_BookYield = (BookYield - mean(BookYield))/sd(BookYield)) %>%
mutate(Rank = rank(-Z_BookYield,ties.method = "first")) %>%   #rank orders ascendingly by default.
filter(Rank <= 10) %>%                                        #Nice trick to negate argument to order desc.
select(-Rank) %>%
mutate(`MC Weight` = (MarketCapUSD/sum(MarketCapUSD))*100)
```
## Earnings Yield of a Cap-Weighted Portfolio of Top 10 Stocks
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 8 - Calculate the Earnings Yield for this cap-weighted portfolio, per month.
# *******************************
SummaryTable <- MktCapWeights %>%
summarise(`Total Weight` = sum(`MC Weight`),
`Portfolio EarningsYield` = sum(`MC Weight`*EarningsYield))
kable(SummaryTable)
```
## Including Plots
View(MktCapWeights)
View(Top10Yields)
---
title: "MyFirst Project"
author: "Chetan Ramlall"
date: "20/05/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
```
```{r datainput, include=FALSE}
# *******************************
# Step 1 - Reads data files into a single dataframe.
# *******************************
d1 <-  read_csv("EQS_20160131.csv")
d2 <-  read_csv("EQS_20160229.csv")
d3 <-  read_csv("EQS_20160331.csv")
full_data <- na.omit(bind_rows(d1,d2,d3))   #Drops all rows with NA
```
```{r filter, include=FALSE}
# *******************************
# Step 2 - Groups and filters date
# *******************************
FilteredData <-
full_data %>%
group_by(date) %>%
top_n(20, MarketCapUSD) %>%
ungroup()
```
## Ranking by USD Market Cap for the First Month (Jan 2016)
```{r ranking, echo = FALSE, message=FALSE}
# *******************************
# Step 3 - Ranking by MarketCapUSD and using kable.
# *******************************
TableData <- FilteredData %>%
filter(date == '2016-01-31') %>%
select(date,Ticker,MarketCapUSD)
OrderedTableData <- TableData[order(TableData$MarketCapUSD,decreasing = TRUE),]
# Another way to do it using filter
# full_data %>% group_by(date) %>% mutate(Rank = rank(MarketCapUSD)) %>% filter(Rank < 20) %>% select(-Rank)
kable(OrderedTableData, align = "cccc",format.args = list(big.mark = ",",scientific = FALSE))
```
## Book Yield for the First Month (Jan 2016)
```{r bookyield, echo = FALSE, message=FALSE}
# *******************************
# Step 4 - Z-Score for BookYield
# *******************************
YieldData <- full_data %>%
filter(date == '2016-01-31') %>%
select(date,Ticker,BookYield) %>%
mutate(Z_BookYield = (BookYield - mean(BookYield))/sd(BookYield))
kable(YieldData, align = "cccc",format.args = list(big.mark = ",",scientific = FALSE))
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 5 - Z-Scores for all months
# *******************************
AllYieldData <- full_data %>%
group_by(date) %>%
select(date,Ticker,BookYield) %>%
mutate(Z_BookYield = (BookYield - mean(BookYield))/sd(BookYield)) %>%
ungroup()
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 6 - Top 10 stocks with highest bookyield for all months.
# *******************************
Top10Yields <- AllYieldData %>%
group_by(date) %>%
mutate(Rank = rank(-Z_BookYield,ties.method = "first")) %>% #rank orders ascendingly by default.
filter(Rank <= 10) %>%                                      #Nice trick to negate argument to order desc.
select(-Rank) %>%
ungroup()
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 7 - Calculate Market Cap Weighted weight for the Top 10 stocks, per month.
# *******************************
MktCapWeights <- full_data %>%
group_by(date) %>%
mutate(Z_BookYield = (BookYield - mean(BookYield))/sd(BookYield)) %>%
mutate(Rank = rank(-Z_BookYield,ties.method = "first")) %>%   #rank orders ascendingly by default.
filter(Rank <= 10) %>%                                        #Nice trick to negate argument to order desc.
select(-Rank) %>%
mutate(`MC Weight` = (MarketCapUSD/sum(MarketCapUSD))*100)
```
## Earnings Yield of a Cap-Weighted Portfolio of Top 10 Stocks
```{r , echo = FALSE, message=FALSE}
# *******************************
# Step 8 - Calculate the Earnings Yield for this cap-weighted portfolio, per month.
# *******************************
SummaryTable <- MktCapWeights %>%
summarise(`Total Weight` = sum(`MC Weight`),
`Portfolio EarningsYield` = sum(`MC Weight`/100*EarningsYield))
kable(SummaryTable, align = "ccc",format.args = list(big.mark = ",",
scientific = FALSE))
```
## Including Plots
View(full_data)
View(YieldData)
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "count") +
coord_flip()
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "count")
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "count",
position = "stack")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Z_BookYield)) +
geom_bar(stat = "count",
position = "stack")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Z_BookYield)) +
geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_col()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_col() +
coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
library(tidyverse)
library(dplyr)
library(knitr)
library(ggplot2)
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "identity") +
coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
#ggplot(aes(x = Ticker, y = Z_BookYield)) +
ggplot(aes(x = Z_BookYield)) +
geom_bar(stat = "identity") +
coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
#ggplot(aes(x = Ticker, y = Z_BookYield)) +
ggplot(aes(x = Z_BookYield)) +
geom_bar(stat = "count") +
coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
#ggplot(aes(x = Z_BookYield)) +
geom_bar(stat = "identity") +
coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
#ggplot(aes(x = Ticker, y = Z_BookYield)) +
ggplot(aes(x = Z_BookYield)) +
#geom_bar(stat = "identity") +
geom_histogram(bins = 20) +
#coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
#ggplot(aes(x = Ticker, y = Z_BookYield)) +
ggplot(aes(x = Z_BookYield)) +
#geom_bar(stat = "identity") +
geom_histogram(bins = 20)
#coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
ZBookYieldJan <- YieldData %>%
#ggplot(aes(x = Ticker, y = Z_BookYield)) +
ggplot(aes(x = Z_BookYield)) +
#geom_bar(stat = "identity") +
geom_histogram(bins = 100)
#coord_flip()
#geom_bar(stat = "count")
ZBookYieldJan
CapWeightEarningsYield <- SummaryTable %>%
ggplot(aes(x = date, y = `Portfolio EarningsYield`)) +
geom_line()
CapWeightEarningsYield
CapWeightEarningsYield <- SummaryTable %>%
ggplot(aes(x = date, y = `Portfolio EarningsYield`)) +
geom_line() +
ggtitle("Cap-Weighted Portfolio Earnings Yield over Time")
CapWeightEarningsYield
ZBookYieldJan <- YieldData %>%
ggplot(aes(x = Ticker, y = Z_BookYield)) +
geom_bar(stat = "identity") +
coord_flip()
ZBookYieldJan
CapWeightEarningsYield <- SummaryTable %>%
ggplot(aes(x = date, y = `Portfolio EarningsYield`)) +
geom_line() +
ggtitle("Cap-Weighted Portfolio Earnings Yield over Time") +
theme(plot.title = element_text(hjust = 0.5))
CapWeightEarningsYield
```
library(Rblpapi)
---
title: "MyFirstProject_EQS"
author: "Chetan Ramlall"
date: "27/07/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
library(ggplot2)
library(Rblpapi)
```
```{r}
# *******************************
# Connect BBG API
# *******************************
blpConnect()
---
title: "MyFirstProject_EQS"
author: "Chetan Ramlall"
date: "27/07/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
library(ggplot2)
library(Rblpapi)
```
```{r}
# *******************************
# Connect BBG API
# *******************************
blpConnect()
```
```{r}
# *******************************
# Download SPX levels from 2003 to date.
# *******************************
StartDate <- as.Date("2003/01/01")
opt <- c("periodicitySelection" = "MONTHLY")
SPXLevels <-  bdh("SPXT Index",
fields = c("PX_LAST"),
StartDate,
options = opt)
```
View(SPXLevels)
---
title: "MyFirstProject_EQS"
author: "Chetan Ramlall"
date: "27/07/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
library(ggplot2)
library(Rblpapi)
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Connect BBG API
# *******************************
blpConnect()
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Download SPX levels from 2003 to date.
# *******************************
StartDate <- as.Date("2003/01/01")
opt <- c("periodicitySelection" = "MONTHLY")
SPXLevels <-  bdh("SPXT Index",
fields = c("PX_LAST"),
StartDate,
options = opt)
SPXLevelsPlot <- SPXLevels %>%
ggplot(aes(x = date, y = PX_LAST)) +
geom_line() +
ggtitle("S&P 500 Levels from Jan 2003 to Jun 2021") +
theme(plot.title = element_text(hjust = 0.5))
SPXLevelsPlot
```
```{r , echo = FALSE, message=FALSE}
# *******************************
# Download EQS Screen for SPX to see ROE and P/B Ratios
# *******************************
```
EQSDate1 <- as.Date("2006/12/31")
EQSDate2 <- as.Date("2007/12/31")
EQSScreen2006 <- beqs("SPX_Screen",
screenType = "PRIVATE",
date = EQSDate1)
EQSScreen2007 <- beqs("SPX_Screen",
screenType = "PRIVATE",
date = EQSDate2)
View(EQSScreen2006)
View(EQSScreen2007)
